action,ms,bytes,lang,code,repeat,minver,comment
before,0,0,q,.servers.startup[],1,,"Start TorQ connection management"
before,0,0,q,.proc.sys "sleep 3",1,,"Wait for proc to start"
before,0,0,q,g:gethandle[`gateway1],1,,"Open gateway handle"
run,0,0,q,hdbproc:getdict[`hdbproc],1,,"get input dictionary for hdb single process query"
run,0,0,q,hdbproc[`sublist]:sublistvalue,1,,"add sublist to query dictionary"
true,0,0,q,hdbproc[`sublist] ~ count g(`.dataaccess.getdata;hdbproc),1,,"count of query should equal value added to sublist key"
run,0,0,q,hdbproc:getdict[`hdbproc],1,,"get input dictionary for hdb single process query"
run,0,0,q,hdbproc[`postprocessing]:{flip x},1,,"add flip x as function in postprocessing in  query dictionary"
true,0,0,q,99h ~ type g(`.dataaccess.getdata;hdbproc),1,,"check dictionary is returned from hdb single proc query without postprocessing table would be returned"
run,0,0,q,hdbproc:getdict[`hdbproc],1,,"get input dictionary for sinle process query"
run,0,0,q,hdbproc[`sublist`postprocessing]:(sublistvalue;{flip x}),1,,"add postprocessing and sublist query dictionary"
true,0,0,q,hdbproc[`sublist] ~ count g(`.dataaccess.getdata;hdbproc),1,,"count of query should equal value added to sublist key"
true,0,0,q,99h ~ type g(`.dataaccess.getdata;hdbproc),1,,"check dictionary is returned from single hdb proc query without postprocessing table would be returned"
run,0,0,q,rdbproc:getdict[`rdbproc],1,,"get input dictionary for single rdb process query"
run,0,0,q,rdbproc[`sublist]:sublistvalue,1,,"add sublist to query dictionary"
true,0,0,q,rdbproc[`sublist] ~ count g(`.dataaccess.getdata;rdbproc),1,,"count of query should equal value added to sublist key"
run,0,0,q,rdbproc:getdict[`rdbproc],1,,"get input dictionary for rdb single process query"
run,0,0,q,rdbproc[`postprocessing]:{flip x},1,,"add flip x as function in postprocessing in  query dictionary"
true,0,0,q,99h ~ type g(`.dataaccess.getdata;rdbproc),1,,"check dictionary is returned from rdb single proc query without postprocessing table would be returned"
run,0,0,q,rdbproc:getdict[`rdbproc],1,,"get input dictionary for single rdb process query"
run,0,0,q,rdbproc[`sublist`postprocessing]:(sublistvalue;{flip x}),1,,"add postprocessing and sublist query dictionary"
true,0,0,q,rdbproc[`sublist] ~ count g(`.dataaccess.getdata;rdbproc),1,,"count of query should equal value added to sublist key"
true,0,0,q,99h ~ type g(`.dataaccess.getdata;rdbproc),1,,"check dictionary is returned from single rdb proc query without postprocessing table would be returned"
run,0,0,q,multiproc:getdict[`multiproc],1,,"get input dictionary for multi process query"
run,0,0,q,multiproc[`sublist]:sublistvalue,1,,"add sublist to query dictionary"
true,0,0,q,multiproc[`sublist] ~ count g(`.dataaccess.getdata;multiproc),1,,"count of query should equal value added to sublist key"
true,0,0,q,98h ~ type g(`.dataaccess.getdata;getdict[`multiproc]),1,,"check table is returned from multi proc query"
run,0,0,q,multiproc:getdict[`multiproc],1,,"get original multi process input dictionary"
run,0,0,q,multiproc[`postprocessing]:{flip x},1,,"add flip x as function in postprocessing in  query dictionary"
true,0,0,q,99h ~ type g(`.dataaccess.getdata;multiproc),1,,"check dictionary is returned from multi proc query"
run,0,0,q,multiproc:getdict[`multiproc],1,,"get original multi proc input dictionary"
run,0,0,q,multiproc[`sublist`postprocessing]:(sublistvalue;{flip x}),1,,"add postprocessing and sublist query dictionary"
true,0,0,q,99h ~ type g(`.dataaccess.getdata;multiproc),1,,"check dictionary is returned from single proc query"
true,0,0,q,multiproc[`sublist] ~ count g(`.dataaccess.getdata;multiproc),1,,"count of query should equal value added to sublist key"
run,0,0,q,mapreducemulti:getdict[`mapreducemulti],1,,"get map reduced multi process query dictionary"
run,0,0,q,mapreducemulti[`sublist]:sublistvalue,1,,"add sublist to query dictionary"
true,0,0,q,mapreducemulti[`sublist] ~ count g(`.dataaccess.getdata;mapreducemulti),1,,"count of query should equal value added to sublist key"
run,0,0,q,mapreducemulti:getdict[`mapreducemulti],1,,"get original multi proc map reduced input dict"
run,0,0,q,mapreducemulti[`postprocessing]:{0!x},1,,"add 0!x as function in postprocessing in query dictionary - keyed table normally returned this will return normal table"
true,0,0,q,98h ~ type g(`.dataaccess.getdata;mapreducemulti),1,,"check dictionary is returned from mapreduced multi proc query"
run,0,0,q,mapreducemulti:getdict[`mapreducemulti],1,,"add sublist to query dictionary"
run,0,0,q,mapreducemulti[`sublist`postprocessing]:(sublistvalue;{0!x}),1,,"add postprocessing and sublist query dictionary"
true,0,0,q,98h ~ type g(`.dataaccess.getdata;mapreducemulti),1,,"check table is returned from single proc query"
true,0,0,q,sublistvalue ~ count g(`.dataaccess.getdata;mapreducemulti),1,,"count of query should equal value added to sublist key"
