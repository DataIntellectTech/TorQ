action,ms,bytes,lang,code,repeat,minver,comment
beforeany,0,0,q,system "sleep 1",1,,"Wait for all procs to go up"
before,0,0,q,"errors:1!.checkinputs.readcsv[` sv testpath,`testdata`checkinputerrors.csv;""s*""]",1,,"load in error to be thrown for incorrect inputs"
true,0,0,q,checkreturnederror[`tableexists],1,,"todo - check if table exists"
true,0,0,q,checkreturnederror[`timecolumnexists],1,,"date column does not exist in rdb despite implied range"
true,0,0,q,checkreturnederror[`invalidtimecolumn],1,,"source is not a valid time column"
true,0,0,q,checkreturnederror[`columnsexist],1,,"columns requested don't exist"
true,0,0,q,checkreturnederror[`aggregationcolumnsexist],1,,"check columns indicated by aggregation"
true,0,0,q,checkreturnederror[`invalidaggregationfuncs],1,,"check a valid aggregation function has been passed"
true,0,0,q,checkreturnederror[`timebarinvalid],,1,,"third argument of timebar must be one of:`nanosecond`second`minute`hour`day"
true,0,0,q,checkreturnederror[`timebarexists],,1,,"timecolumn does not exist"
true,0,0,q,checkreturnederror[`timebartype],,1,,"timecolumn must be of valid type"
true,0,0,q,checkreturnederror[`aggregationdistinct],,1,,"distinct operator can only be used once"
true,0,0,q,checkreturnederror[`timebarmissingagg],,1,,"distinct operator can only be used once"
true,0,0,q,checkreturnederror[`aggnumber],,1,,"number of inputs for aggregation wavg insufficient"
true,0,0,q,checkreturnederror[`dictfreeformby],,1,,"a freeformby dict input will kill session"
true,0,0,q,checkreturnederror[`columncheckffwhere],,1,,"check column in freeformwhere parameter"
true,0,0,q,checkreturnederror[`notffwhere],,1,,"check not condition in freeformwhere parameter"
true,0,0,q,checkreturnederror[`operatorffwhere],,1,,"undefined operators used"
true,0,0,q,checkreturnederror[`columncheckffby],,1,,"invalid column defined in freeformby parameter"
true,0,0,q,checkreturnederror[`columncheckffcolumn],,1,,"check columns exist in freeformcolumn parameter"
true,0,0,q,99h~type .checkinputs.checkinputs gettestparams`validinput1,,1,,".checkinputs.checkinputs runs successfully and returns a dictionary"
true,0,0,q,99h~type .checkinputs.checkinputs gettestparams`validinput2,,1,,".checkinputs.checkinputs runs successfully and returns a dictionary"
true,0,0,q,99h~type .checkinputs.checkinputs gettestparams`validinput3,,1,,".checkinputs.checkinputs runs successfully and returns a dictionary"
