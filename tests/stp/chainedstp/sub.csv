action,ms,bytes,lang,code,repeat,minver,comment
beforeany,0,0,q,system "sleep 5",1,,"Wait for all procs to go up"
before,0,0,q,.servers.startup[],1,,"Get connection management set up"
before,0,0,q,system "sleep 2",1,,"Wait for all connections"
before,0,0,q,stpHandle:gethandle[`stp1],1,,"Open handle to STP"
before,0,0,q,stpHandle(`.stplg.init;teststpdb),1,,"Create test stplog test directory"
before,0,0,q,sctpHandle:gethandle[`sctp1],1,,"Open handle to SCTP"
before,0,0,q,sctpHandle".sctp.loggingmode:`create",1,,"Configure the SCTP to create logs"
before,0,0,q,sctpHandle(`.stplg.init;testsctpdb),1,,"Create test stplog test directory"
before,0,0,q,startproc each ("rdball";"rdbsymfilt";"rdbcomplexfilt"),1,,"Start segmented tickerplant in tabperiod mode"
before,0,0,q,system "sleep 2",1,,"Wait for all connections"
before,0,0,q,rdbHandles:`all`sym`complex!gethandle each `rdball`rdbsymfilt`rdbcomplexfilt,1,,"Open handle to RDBs"
before,0,0,q,currlog:sctpHandle"currlog",1,,"Get SCTP log table"
before,0,0,q,met:sctpHandle".stpm.metatable",1,,"Get SCTP meta table"
before,0,0,q,t1:(value rdbHandles) @\: "count trade",1,,"Get initial trade table counts"
before,0,0,q,q1:(value rdbHandles) @\: "count quote",1,,"Get initial quote table counts"
before,0,0,q,![-11;] each exec logname from currlog where tbl in `trade`quote,1,,"Replay logs locally"
before,0,0,q,t2:count trade,1,,"Get local trade table count"
before,0,0,q,q2:count quote,1,,"Get local quote table count"
before,0,0,q,{delete from x} each `trade`quote,1,,"Clear local tables"
run,0,0,q,"stpHandle @/: `.u.upd ,/: ((`trade;testtrade);(`quote;testquote))",1,,"Publish table updates to STP"
run,0,0,q,"sctpHandle @/: `.u.upd ,/: ((`trade;`error);(`quote;`error);(`heartbeat;`error))",1,,"Publish error updates to SCTP"
run,0,0,q,system "sleep 1",1,,"Wait for update to publish"
run,0,0,q,![-11;] each exec logname from currlog where tbl in `trade`quote`segmentederrorlogfile,1,,"Replay logs locally"
true,0,0,q,"all not raze value exec null logname,null handle from currlog",1,,"Check lognames and handles generated"
true,0,0,q,currlog[`trade;`logname]~exec last logname from met where `trade in/: tbls,1,,"Check lognames the same in log and meta"
true,0,0,q,currlog[`quote;`logname]~exec last logname from met where `quote in/: tbls,1,,"Check lognames the same in log and meta"
true,0,0,q,(0#trade)~first value exec first schema from met where `trade in/: tbls,1,,"Check trade schema saved to meta table"
true,0,0,q,(0#quote)~first value exec first schema from met where `quote in/: tbls,1,,"Check quote schema saved to meta table"
true,0,0,q,all 1=count each ah:stpHandle".stpps.subrequestall .stpps.t",1,,"Check only one client subscribed to all tables from stp"
true,0,0,q,`sctp1~stpHandle(first raze ah;`.proc.procname),1,,"Check it is sctp"
true,0,0,q,all 1=count each ah:sctpHandle".stpps.subrequestall .stpps.t",1,,"Check only one client subscribed to all tables from sctp"
true,0,0,q,`rdball~sctpHandle(first raze ah;`.proc.procname),1,,"Check it is rdball"
true,0,0,q,not any first[raze ah]=fh:sctpHandle"exec handle from .stpps.subrequestfiltered",1,,"Check rdball not in filtered sub table"
true,0,0,q,"all `rdbsymfilt`rdbcomplexfilt in sctpHandle @/: fh ,\: `.proc.procname",1,,"Check filtered table contains correct RDBs"
true,0,0,q,(t1+10 5 5)~(value rdbHandles) @\: "count trade",1,,"Check trade update was correctly published"
true,0,0,q,(q1+10 0 5)~(value rdbHandles) @\: "count quote",1,,"Check quote update was correctly published"
true,0,0,q,"(10+q2,t2)~count each (trade;quote)",1,,"Check updates were correctly saved to disk"
true,0,0,q,all `GOOG=rdbHandles[`sym]"exec distinct sym from trade",1,,"Check sym update"
true,0,0,q,0=count rdbHandles[`complex]"select from quote where bid<50",1,,"Check complex update"
true,0,0,q,`error~.tst.err,1,,"Check errors were logged to disk"
run,0,0,q,"sctpHandle @/: `.z.pc ,/: ah,fh",1,,"Disconnect handles"
true,0,0,q,all 0=count each sctpHandle".stpps.subrequestall .stpps.t",1,,"Check all subs table is cleared"
true,0,0,q,0=count stpHandle".stpps.subrequestfiltered",1,,"Check filtered subs table is cleared"
run,0,0,q,sctpHandle".sctp.loggingmode:`none",1,,"Configure the SCTP to NOT create logs"
run,0,0,q,"sctpHandle"".stplg.init[]"" ",1,,"Re-initialise SCTP"
run,0,0,q,"stpHandle @/: `.u.upd ,/: ((`trade;testtrade);(`quote;testquote))",1,,"Publish table updates to STP"
run,0,0,q,system "sleep 1",1,,"Wait for update to publish"
true,0,0,q,(t1+10 5 5)~(value rdbHandles) @\: "count trade",1,,"Check trade update was correctly published"
true,0,0,q,(q1+10 0 5)~(value rdbHandles) @\: "count quote",1,,"Check quote update was correctly published"
after,0,0,q,"system ""rm -rf "",1_string stpHandle(`.stplg.dldir)",1,,"Delete logs folder"
after,0,0,q,"system ""rm -rf "",1_string sctpHandle(`.stplg.dldir)",1,,"Delete logs folder"