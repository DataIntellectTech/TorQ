action,ms,bytes,lang,code,repeat,minver,comment
beforeany,0,0,q,system "sleep 5",1,,"Wait for all procs to go up"
before,0,0,q,.servers.startup[],1,,"Get connection management set up"
before,0,0,q,system "sleep 2",1,,"Wait for all connections"
before,0,0,q,stpHandle:gethandle[`stp1],1,,"Get STP handle"
before,0,0,q,sctpHandle:gethandle[`sctp1],1,,"Get SCTP handle"
before,0,0,q,sctpHandle(`.stplg.init;testlogdb),1,,"Switch test stplog directory"
before,0,0,q,rdbHandle:gethandle[`rdb1],1,,"Get RDB handle"
before,0,0,q,(enlist rdbHandle) @\: (set;`endofperiod;endp),1,,"Set dummy endofperiod function on each sub"
before,0,0,q,logperiod:sctpHandle".stplg.multilogperiod",1,,"Get logging period"
before,0,0,q,rdbHandle"endofday:{[x;y] .tst.eod:1b}",1,,"Overwrite RDB endofday function"
before,0,0,q,eod1:stpHandle".eodtime.d",1,,"Get initial date"
before,0,0,q,period:`curr`next!sctpHandle".stplg[`currperiod`nextperiod]",1,,"Get current and next roll periods"
before,0,0,q,`stp1~sctpHandle"first distinct exec procname from .sub.SUBSCRIPTIONS",1,,"check that sctp has subscribed to stp in parent mode"
run,0,0,q,"stpHandle @/: `.u.upd ,/: ((`trade;testtrade);(`quote;testquote))",1,,"Publish table updates to STP"
run,0,0,q,system "sleep 11",1,,"Wait for a full period"
true,0,0,q,10~rdbHandle"count trade",1,,"Check trade update was correctly published"
true,0,0,q,10~rdbHandle"count quote",1,,"Check quote update was correctly published"
true,0,0,q,all 0 = sctpHandle"count each `. .stpps.t",1,,"Check tables have been flushed"
run,0,0,q,test:rdbHandle".tst.endp",1,,"test"
true,0,0,q,all 0=(enlist rdbHandle) @\: (`.tst.endp),1,,"Check the endofperiod function has been triggered once on all subs"
run,0,0,q,sctpHandle".z.exit[0i]",1,,"check that sctp can exit cleanly in parent mode"
run,0,0,q,now:.z.p,1,,"Get current time"
run,0,0,q,data:stpHandle".stplg.endofdaydata[]",1,,"get data"
run,0,0,q,"stpHandle(`.stplg.stpeod;.eodtime.d;data,(enlist `p)!enlist now)",1,,"Run EoD function on STP"
true,0,0,q,all 0 = sctpHandle"count each `. .stpps.t",1,,"Check tables have been flushed"
run,0,0,q,eod2:stpHandle".eodtime.d",1,,"Get new date"
true,0,0,q,rdbHandle".tst.eod",1,,"Check EoD was triggered on the sub"
true,0,0,q,(eod1+1)~eod2:stpHandle".eodtime.d",1,,"Check EoD date has incremented"
true,0,0,q,eod2~eod1+1,1,,"Check the internal date has incremented"
true,0,0,q,all null value sctpHandle"loghandles",1,,"Check all log handles are null"
run,0,0,q,sctpHandle".sctp.loggingmode:`none",1,,"Set SCTP to NONE logging more"
run,0,0,q,sctpHandle(`.stplg.init;testlogdb),1,,"Switch test stplog directory"
run,0,0,q,`stp1~sctpHandle"first distinct exec procname from .sub.SUBSCRIPTIONS",1,,"check that sctp has subscribed to stp whilst in none mode"
run,0,0,q,"stpHandle @/: `.u.upd ,/: ((`trade;testtrade);(`quote;testquote))",1,,"Publish table updates to STP"
run,0,0,q,rdbHandle".tst.eod:0b",1,,"reset eod test variable in subscriber"
run,0,0,q,eod1:stpHandle".eodtime.d",1,,"Get initial date"
run,0,0,q,period:`curr`next!sctpHandle".stplg[`currperiod`nextperiod]",1,,"Get current and next roll periods"
run,0,0,q,system "sleep 11",1,,"Wait for a full period"
true,0,0,q,20~rdbHandle"count trade",1,,"Check trade update was correctly published"
true,0,0,q,20~rdbHandle"count quote",1,,"Check quote update was correctly published"
true,0,0,q,all 0 = sctpHandle"count each `. .stpps.t",1,,"Check tables have been flushed"
true,0,0,q,all 1=(enlist rdbHandle) @\: (`.tst.endp),1,,"Check the endofperiod function has been triggered once on all subs"
run,0,0,q,now:.z.p,1,,"Get current time"
run,0,0,q,data:stpHandle".stplg.endofdaydata[]",1,,"get data"
run,0,0,q,"stpHandle(`.stplg.stpeod;.eodtime.d;data,(enlist `p)!enlist now)",1,,"Run EoD function on STP"
true,0,0,q,all 0 = sctpHandle"count each `. .stpps.t",1,,"Check tables have been flushed"
run,0,0,q,eod2:stpHandle".eodtime.d",1,,"Get new date"
true,0,0,q,rdbHandle".tst.eod",1,,"Check EoD was triggered on the sub"
true,0,0,q,(eod1+1)~eod2:stpHandle".eodtime.d",1,,"Check EoD date has incremented"
true,0,0,q,eod2~eod1+1,1,,"Check the internal date has incremented"
true,0,0,q,all null value sctpHandle"loghandles",1,,"Check all log handles are null"
run,0,0,q,sctpHandle".z.exit[0i]",1,,"check that sctp can exit cleanly in none mode"