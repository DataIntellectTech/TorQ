action,ms,bytes,lang,code,repeat,minver,comment
before,0,0,q,.stpps.segmentconfig:([] table:`$();segmentID:`int$();wcRef:`$()),1,,"Setting empty table to test .stpps.segmentfilter"
before,0,0,q,.stpps.segmentfiltermap:enlist[`$()]!enlist[""],1,,"Setting empty table to test .stpps.segmentfilter"
before,0,0,q,.stpps.segmentfiltermap:enlist[`wca]!enlist["sym in `IBM"],1,,"Assigning a map for `wca"
before,0,0,q,`.stpps.segmentconfig upsert (`quote;1;`wca),1,,"Adding data to config table"
before,0,0,q,`.stpps.segmentconfig upsert (`trade;1;`wca),1,,"Adding data to config table"
before,0,0,q,`.stpps.segmentconfig upsert (`trade;2;`wcb),1,,"Adding data to config table"
before,0,0,q,`.stpps.ignoredtables upsert `quote_iex,1,,"Adding data to ignore list to test this table does not sub"
before,0,0,q,errmsg:"Table quote_iex is in ignoredtables.csv and will not be subscribed to",1,,"This message that should be returned if the table quote_iex is ignored"
before,0,0,q, where_clause:"sym in `IBM",1,,"Settign where clause to test .stpps.segmentfilter"
before,0,0,q, .stpps.subsegment[`quote;1],1,,"Subscribing to quotes with segid 1"
true,0,0,q, (.stpps.segmentfilter[`quote;1])~where_clause,1,,"Checking where clause returned matches what is expected"
true,0,0,q,(count exec filts from .stpps.subrequestfiltered where tbl=`quote) =1,1,,"Showing quote has been subscribed to"
true,0,0,q,(count .stpps.subrequestfiltered)=1,1,,"Shows that only one table was subscribed to"
true,0,0,q,(count exec filts from .stpps.subrequestfiltered where tbl=`trade_iex) = 0,1,,"Shows trade_iex was not subscribed to"
true,0,0,q,.stpps.segmentfilter[`trade;2]~"",1,,"No wcb in segmentfiltermap"
true,0,0,q,(type last .stpps.subsegment[`trade;2])=99h,1,,"Check that this should error"
true,0,0,q,(type last .stpps.subsegment[`quote_iex;1])=99h,1,,"Testing that this table is ignored"
true,0,0,q,(last .stpps.subsegment[`quote_iex;1])[`msg]~errmsg,1,,"This checks that the error message matches what we expect"
